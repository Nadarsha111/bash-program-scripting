echo hello bash
./countdown.sh 5
[[ 4 -le 5 ]]
echo $?
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
__vsc_prompt_cmd_original
[[ 4 -le 5 ]]
[[ 4 -ge 5 ]]
echo $?
clear
[[ 4 -ge 5 ]]
__vsc_prompt_cmd_original
help test
help if
man
help
man if
help if
help [[ expression ]]
[[ 10 -ne 5 ]]
[[ 10 -ne 5 ]]
help test
sdlfasfjl
bad_command
ls --color=auto
ls --color=auto -y
help test
builtin unset VSCODE_INJECTION
[ -z "$VSCODE_SHELL_INTEGRATION" ]
[ -n "${VSCODE_ENV_REPLACE:-}" ]
[ -n "${VSCODE_ENV_PREPEND:-}" ]
[ -n "${VSCODE_ENV_APPEND:-}" ]
[[ "$(uname -s)" =~ ^CYGWIN*|MINGW*|MSYS* ]]
__vsc_is_windows=0
[[ "$HISTCONTROL" =~ .. ]]
__vsc_history_verify=1
__vsc_initialized=0
__vsc_original_PS1="$PS1"
__vsc_original_PS2="$PS2"
__vsc_custom_PS1=""
__vsc_custom_PS2=""
__vsc_in_command_execution="1"
__vsc_current_command=""
__vsc_nonce="$VSCODE_NONCE"
unset VSCODE_NONCE
builtin printf "\e]633;P;ContinuationPrompt=$(echo "$PS2" | sed 's/\x1b/\\\\x1b/g')\a"
[[ -n "${bash_preexec_imported:-}" ]]
__vsc_dbg_trap="$(__vsc_get_trap DEBUG)"
[[ -z "$__vsc_dbg_trap" ]]
[[ "$__vsc_dbg_trap" != '__vsc_preexec "$_"' && "$__vsc_dbg_trap" != '__vsc_preexec_all "$_"' ]]
trap '__vsc_preexec_all "$_"' DEBUG
__vsc_original_prompt_command=${PROMPT_COMMAND:-}
help test
clear
[[ -a countdown.sh ]]
[[ -a bad_file.txt ]]
[[ -a bad_file.txt ]]
[[ -x countdown.sh ]]
help [[ expression ]]
[[ -x countdown.sh && 5 -le 4 ]]
